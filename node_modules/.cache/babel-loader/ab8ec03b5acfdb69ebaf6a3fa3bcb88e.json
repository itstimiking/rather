{"ast":null,"code":"var _jsxFileName = \"/home/timiking/Apps/rather/src/routes/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport QuestionAbbr from '../components/QuestionAbbr';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchQuestions } from \"../redux/reducers/slices/questions\";\nimport { fetchAllUsers } from \"../redux/reducers/slices/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.questions.questions);\n  const user = useSelector(state => state.users.user);\n  const [questionsToShow, setQuestionsToShow] = useState(\"Answered\");\n  const [questionsList, setQuestionsList] = useState([]);\n  useEffect(() => {\n    dispatch(fetchQuestions()); // Fetch all questions\n\n    dispatch(fetchAllUsers()); // Fetch all users\n  }, [dispatch]);\n  useEffect(() => {}, [questions, user]);\n\n  const filterQuestions = query => {\n    if (query === \"answered\") {\n      const filter = Object.entries(questions).filter(question => {\n        return Object.keys(user.answers).includes(question[0]);\n      });\n      setQuestionsList(filter);\n    } else {\n      const filter = Object.entries(questions).filter(question => {\n        return !Object.keys(user.answers).includes(question[0]);\n      });\n      setQuestionsList(filter);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:w-4/6 w-5/6 min-h-0 border-2 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-12 w-full border-2 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `w-1/2 h-full border-r-2 ${questionsToShow === \"Answered\" ? \"bg-blue-400 text-white\" : \"\"}`,\n          onClick: () => filterQuestions(\"answered\"),\n          children: \"Answered Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `w-1/2 h-full border-r-2 ${questionsToShow === \"Unanswered\" ? \"bg-blue-400 text-white\" : \"\"}`,\n          onClick: () => filterQuestions(\"unanswered\"),\n          children: \"Unanswered Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full min-h-0 p-10 flex flex-col space-y-5\",\n        children: [questionsList.length > 0 && questionsList.map(question => /*#__PURE__*/_jsxDEV(QuestionAbbr, {\n          question: question[1]\n        }, question[0], false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 55\n        }, this)), questionsToShow === \"Unanswered\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(QuestionAbbr, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"NpaYH0CbhjWMa5SbG1pAJjRupcE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/timiking/Apps/rather/src/routes/home.js"],"names":["React","useState","useEffect","QuestionAbbr","useDispatch","useSelector","fetchQuestions","fetchAllUsers","Home","dispatch","questions","state","user","users","questionsToShow","setQuestionsToShow","questionsList","setQuestionsList","filterQuestions","query","filter","Object","entries","question","keys","answers","includes","length","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport QuestionAbbr from '../components/QuestionAbbr';\n\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {fetchQuestions} from \"../redux/reducers/slices/questions\";\nimport {fetchAllUsers} from \"../redux/reducers/slices/users\";\n\nfunction Home() {\n\n    const dispatch = useDispatch();\n    const questions = useSelector(state => state.questions.questions);\n    const user = useSelector(state => state.users.user);\n    \n    const [questionsToShow, setQuestionsToShow] = useState(\"Answered\");\n\n    const [questionsList, setQuestionsList] = useState([])\n\n    useEffect(()=>{\n        dispatch(fetchQuestions()) // Fetch all questions\n        dispatch(fetchAllUsers()) // Fetch all users\n    },[dispatch])\n\n    useEffect(()=>{\n\n    },[questions,user])\n\n    const filterQuestions = (query)=>{\n        if(query === \"answered\"){\n            const filter = Object.entries(questions).filter((question)=>{\n                return Object.keys(user.answers).includes(question[0])\n            })\n\n            setQuestionsList(filter)\n        }else{\n            const filter = Object.entries(questions).filter((question)=>{\n                return !Object.keys(user.answers).includes(question[0])\n            })\n\n            setQuestionsList(filter)\n        }\n    }\n    \n\n\n    return (\n        <div className=\"flex justify-center w-full\">\n\n            <div className=\"md:w-4/6 w-5/6 min-h-0 border-2 rounded-md\">\n\n                <div className=\"h-12 w-full border-2 flex\">\n                    <button \n                        className={\n                            `w-1/2 h-full border-r-2 ${questionsToShow === \"Answered\"? \"bg-blue-400 text-white\": \"\"}`\n                        }\n                        onClick={()=> filterQuestions(\"answered\")}\n                    >\n                        Answered Questions\n                    </button>\n                    <button \n                        className={\n                            `w-1/2 h-full border-r-2 ${questionsToShow === \"Unanswered\"? \"bg-blue-400 text-white\": \"\"}`\n                        }\n                        onClick={()=> filterQuestions(\"unanswered\")}\n                    >\n                        Unanswered Questions\n                    </button>\n                </div>\n\n                <div className=\"w-full min-h-0 p-10 flex flex-col space-y-5\">\n\n                    {\n                        questionsList.length > 0 && \n                        questionsList.map(question => <QuestionAbbr key={question[0]} question={question[1]} /> )\n                        \n                    }\n\n                    {\n                        questionsToShow === \"Unanswered\" && (\n                            <>\n                                <QuestionAbbr />\n                            </>\n                        )\n                    }\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}