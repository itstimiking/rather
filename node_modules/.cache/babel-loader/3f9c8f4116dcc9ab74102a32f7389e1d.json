{"ast":null,"code":"var _jsxFileName = \"/home/timiking/Apps/rather/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveQuestionAnswer } from '../redux/reducers/slices/questions';\nimport { updateUser } from '../redux/reducers/slices/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question() {\n  _s();\n\n  const {\n    questionID\n  } = useParams();\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.questions.questions);\n  const user = useSelector(state => state.users.user);\n  const users = useSelector(state => state.users.users);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [answeredOrNot, setAnsweredOrNot] = useState(\"\");\n  const [optionOne, setOptionOne] = useState(0);\n  const [optionTwo, setOptionTwo] = useState(0);\n  const [option, setOption] = useState(\"\");\n\n  const calcPercentage = (opt, total) => {\n    if (opt === 0 || total === 0) {\n      return `${0}`;\n    } else {\n      return `${Math.floor(opt / total * 100)}%`;\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(questions).length > 0) {\n      const qst = questions[questionID];\n      setCurrentQuestion(qst);\n      setOptionOne(qst.optionOne.votes.length);\n      setOptionTwo(qst.optionTwo.votes.length);\n    }\n\n    if (user.name) {\n      const arr = Object.keys(user.answers);\n\n      if (arr.includes(currentQuestion.id)) {\n        setAnsweredOrNot(\"answered\");\n      } else {\n        setAnsweredOrNot(\"unanswered\");\n      }\n    }\n  }, [questions, currentQuestion, option, user, users, questionID]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch(saveQuestionAnswer({\n      authedUser: user.id,\n      qid: currentQuestion.id,\n      answer: option\n    }));\n    dispatch(updateUser(user.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full lg:w-1/2 md:w-full min-h-0 border-2 rounded-xl overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"primary-color text-on-primary h-14 flex items-center px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [answeredOrNot === \"unanswered\" && `${users[currentQuestion.author].name} asks:`, answeredOrNot === \"answered\" && `Asked by ${users[currentQuestion.author].name}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-4 bg-white items-center relative\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n                    w-60 h-60 border-t-2 border-green-700 flex absolute \n                    box-border animate-spin place-self-center self-center \n                    rounded-full\n                `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 26\n      }, this), users[currentQuestion.author] && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: users[currentQuestion.author].avatarURL,\n        alt: \"avatar\",\n        className: \"rounded-full w-44 h-44 bg-gray-900 mr-2 border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 51\n      }, this), // Show question with iptions .......\n      answeredOrNot === \"unanswered\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 w-full h-full flex flex-col justify-between border-l-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-black text-2xl\",\n          children: \"Would you rather...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, currentQuestion.id),\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"vote\",\n              id: \"choice1\",\n              value: \"optionOne\",\n              onChange: () => setOption(\"optionOne\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"choice1\",\n              className: \"pl-1\",\n              children: [currentQuestion.optionOne.text,\n              /** First answer */\n              \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"vote\",\n              id: \"choice2\",\n              onChange: () => setOption(\"optionTwo\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"choice2\",\n              className: \"pl-1\",\n              children: [currentQuestion.optionTwo.text,\n              /** First answer */\n              \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Button\",\n            className: \"w-full secondary-color text-white h-10 mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this), // When question is answered, show user selection and percentage\n      answeredOrNot === \"answered\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 w-full h-full flex flex-col justify-between border-l-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-black text-2xl\",\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: `rounded-lg border-2 flex flex-col relative p-5\n                                    ${user.answers[questionID] === \"optionOne\" ? \"border-green-400 bg-green-100\" : \"bg-gray-100 border-gray-200\"}\n                                    `,\n          children: [\n          /** Your vote */\n          user.answers[questionID] === \"optionOne\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `absolute self-end -right-5 -top-6 text-gray-600 leading-tight rounded-full \n                                            flex justify-center items-center w-12 h-12 text-sm font-black bg-yellow-300`,\n            children: [\"Your \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 46\n            }, this), \" vote\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 82\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl mb-4 text-green-700\",\n            children: [currentQuestion.optionOne.text,\n            /** First answer */\n            \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-10 bg-gray-300 rounded-sm overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-2/3 h-full rounded-md flex justify-end items-center pr-2\n                                            ${user.answers[questionID] === \"optionOne\" ? \"bg-green-400 text-white\" : \"bg-gray-400\"}`,\n              style: {\n                width: `${calcPercentage(optionOne, optionOne + optionTwo)}`\n              },\n              children: `${calcPercentage(optionOne, optionOne + optionTwo)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: [optionOne, \" out of \", optionOne + optionTwo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: `border-r rounded-lg bg-gray-100 border-2 flex flex-col relative p-5\n                                    ${user.answers[questionID] === \"optionTwo\" ? \"border-green-400 bg-green-100\" : \"bg-gray-100 border-gray-200\"}\n                                    `,\n          children: [\n          /** Your vote */\n          user.answers[questionID] === \"optionTwo\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `absolute self-end -right-5 -top-6 text-gray-600 leading-tight rounded-full \n                                            flex justify-center items-center w-12 h-12 text-sm font-black bg-yellow-300`,\n            children: [\"Your \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 46\n            }, this), \" vote\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 82\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl mb-4\",\n            children: [currentQuestion.optionTwo.text,\n            /** First answer */\n            \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-10 bg-gray-300 rounded-sm overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `h-full rounded-md flex justify-end items-center pr-2\n                                            ${user.answers[questionID] === \"optionTwo\" ? \"bg-green-400 text-white\" : \"bg-gray-400\"}`,\n              style: {\n                width: calcPercentage(optionTwo, optionOne + optionTwo)\n              },\n              children: calcPercentage(optionTwo, optionOne + optionTwo)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: [optionTwo, \" out of \", optionOne + optionTwo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"ri/SJGKEgW3okKhjhvWQBY+XRcA=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/timiking/Apps/rather/src/components/Question.js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","saveQuestionAnswer","updateUser","Question","questionID","dispatch","questions","state","user","users","currentQuestion","setCurrentQuestion","answeredOrNot","setAnsweredOrNot","optionOne","setOptionOne","optionTwo","setOptionTwo","option","setOption","calcPercentage","opt","total","Math","floor","Object","keys","length","qst","votes","name","arr","answers","includes","id","handleSubmit","e","preventDefault","authedUser","qid","answer","author","loading","avatarURL","text","width"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {saveQuestionAnswer} from '../redux/reducers/slices/questions';\nimport {updateUser} from '../redux/reducers/slices/users';\n\nfunction Question() {\n\n    const { questionID } = useParams();\n\n    const dispatch = useDispatch();\n\n    const questions = useSelector(state => state.questions.questions);\n    const user = useSelector(state => state.users.user);\n    const users = useSelector(state => state.users.users);\n\n    const [currentQuestion, setCurrentQuestion] = useState({});\n    const [answeredOrNot, setAnsweredOrNot ] = useState(\"\");\n\n    const [optionOne, setOptionOne] = useState(0);\n    const [optionTwo, setOptionTwo] = useState(0);\n\n    const [option, setOption] = useState(\"\")\n\n    const calcPercentage = (opt, total) => {\n        if((opt === 0) || total === 0){\n            return `${0}`;\n        }else{\n            return `${Math.floor(opt / total * 100)}%`\n        }\n    }\n \n    useEffect(()=>{\n\n        if(Object.keys(questions).length > 0 ){\n            const qst = questions[questionID];\n            setCurrentQuestion(qst)\n\n            setOptionOne(qst.optionOne.votes.length)\n            setOptionTwo(qst.optionTwo.votes.length)\n        }\n\n        if(user.name){\n\n            const arr = Object.keys(user.answers);\n\n            if(arr.includes(currentQuestion.id)){\n                setAnsweredOrNot(\"answered\")\n            }else{\n                setAnsweredOrNot(\"unanswered\")\n            }\n        }\n\n    },[questions, currentQuestion, option,user,users, questionID])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        dispatch(saveQuestionAnswer({\n            authedUser: user.id,\n            qid: currentQuestion.id,\n            answer: option\n        }))\n        dispatch(updateUser(user.id))\n    }\n\n\n    return (\n        <div className=\"w-full lg:w-1/2 md:w-full min-h-0 border-2 rounded-xl overflow-hidden\">\n\n            <div className=\"primary-color text-on-primary h-14 flex items-center px-4\">\n                <h1> \n                    {answeredOrNot === \"unanswered\" && `${users[currentQuestion.author].name} asks:`} \n                    {answeredOrNot === \"answered\" && `Asked by ${users[currentQuestion.author].name}`}\n                </h1> \n            </div>\n\n            <div className=\"flex p-4 bg-white items-center relative\">\n\n            { loading && <div className={\n                `\n                    w-60 h-60 border-t-2 border-green-700 flex absolute \n                    box-border animate-spin place-self-center self-center \n                    rounded-full\n                `\n                }></div>\n            }\n\n                {users[currentQuestion.author] && <img src={users[currentQuestion.author].avatarURL} alt=\"avatar\" className=\"rounded-full w-44 h-44 bg-gray-900 mr-2 border\" />}\n\n                {// Show question with iptions .......\n\n                    answeredOrNot === \"unanswered\" && (\n                        <div className=\"px-4 w-full h-full flex flex-col justify-between border-l-2\"> \n\n                            <h2 className=\"font-black text-2xl\">\n                                Would you rather...\n                            </h2><br/>\n\n                            <form onSubmit={(e)=>handleSubmit(e,currentQuestion.id)}>\n                                <fieldset>\n                                    <input type=\"radio\" name=\"vote\" id=\"choice1\" value=\"optionOne\"\n                                        onChange={()=> setOption(\"optionOne\")}\n                                    />\n                                    <label htmlFor=\"choice1\" className=\"pl-1\">\n\n                                        {currentQuestion.optionOne.text}{/** First answer */ \"?\"}\n\n                                    </label>\n                                </fieldset><br/>\n\n                                <fieldset>\n                                    <input type=\"radio\" name=\"vote\" id=\"choice2\" \n                                        onChange={()=> setOption(\"optionTwo\")}\n                                    />\n                                    <label htmlFor=\"choice2\" className=\"pl-1\">\n\n                                        {currentQuestion.optionTwo.text}{/** First answer */ \"?\"}\n\n                                    </label>\n                                </fieldset><br/>\n\n                                <input \n                                    type=\"submit\"\n                                    value=\"Button\"\n                                    className=\"w-full secondary-color text-white h-10 mt-2\" \n                                    \n                                /> \n\n                            </form>            \n\n                        </div>\n                    )\n                }\n\n                { // When question is answered, show user selection and percentage\n                    answeredOrNot === \"answered\" && (\n                        <div className=\"px-4 w-full h-full flex flex-col justify-between border-l-2\"> \n\n                            <h2 className=\"font-black text-2xl\">\n                                Results:\n                            </h2><br/>\n\n                            <fieldset \n                                className={\n                                    `rounded-lg border-2 flex flex-col relative p-5\n                                    ${user.answers[questionID] === \"optionOne\" ? \"border-green-400 bg-green-100\" : \"bg-gray-100 border-gray-200\"}\n                                    `\n                                }\n                            >\n\n                                { /** Your vote */\n                                    user.answers[questionID] === \"optionOne\" && (<p \n                                        className={\n                                            `absolute self-end -right-5 -top-6 text-gray-600 leading-tight rounded-full \n                                            flex justify-center items-center w-12 h-12 text-sm font-black bg-yellow-300`\n                                        }\n                                    >\n                                \n                                        Your <br /> vote\n                                    </p>)\n                                }\n\n                                <p className=\"text-xl mb-4 text-green-700\">\n\n                                    {currentQuestion.optionOne.text}{/** First answer */ \"?\"}\n\n                                </p>\n\n                                {/** show percentage */}\n                                <div className=\"w-full h-10 bg-gray-300 rounded-sm overflow-hidden\">\n                                    <div \n                                        className={\n                                            `w-2/3 h-full rounded-md flex justify-end items-center pr-2\n                                            ${user.answers[questionID] === \"optionOne\" ? \"bg-green-400 text-white\" : \"bg-gray-400\"}`\n                                        }\n                                        style={{width: `${calcPercentage(optionOne, optionOne + optionTwo)}`}}\n                                    >\n\n                                        {`${calcPercentage(optionOne, optionOne + optionTwo)}`}\n\n                                    </div>\n                                </div>\n                                <p className=\"text-center\">\n                                    {optionOne} out of {optionOne + optionTwo}\n                                </p>\n                            </fieldset><br/>\n\n                            <fieldset\n                                className={\n                                    `border-r rounded-lg bg-gray-100 border-2 flex flex-col relative p-5\n                                    ${user.answers[questionID] === \"optionTwo\" ? \"border-green-400 bg-green-100\" : \"bg-gray-100 border-gray-200\"}\n                                    `\n                                }\n                            >\n\n                                {/** Your vote */\n                                    user.answers[questionID] === \"optionTwo\" && (<p \n                                        className={\n                                            `absolute self-end -right-5 -top-6 text-gray-600 leading-tight rounded-full \n                                            flex justify-center items-center w-12 h-12 text-sm font-black bg-yellow-300`\n                                        }\n                                    >\n                                \n                                        Your <br /> vote\n                                    </p>)\n                                }\n\n                                <p className=\"text-xl mb-4\">\n\n                                    {currentQuestion.optionTwo.text}{/** First answer */ \"?\"}\n\n                                </p>\n\n                                <div className=\"w-full h-10 bg-gray-300 rounded-sm overflow-hidden\">\n\n                                    <div \n                                        className={\n                                            `h-full rounded-md flex justify-end items-center pr-2\n                                            ${user.answers[questionID] === \"optionTwo\" ? \"bg-green-400 text-white\" : \"bg-gray-400\"}`\n                                        }\n                                        style={{width: calcPercentage(optionTwo, optionOne + optionTwo)}}\n                                    >\n\n                                        {calcPercentage(optionTwo, optionOne + optionTwo)}\n\n                                    </div>\n                                </div>\n\n                                <p className=\"text-center\">\n                                    {optionTwo} out of {optionOne + optionTwo}\n                                </p>\n                            </fieldset><br/>              \n\n                        </div>\n                    )\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default Question\n"]},"metadata":{},"sourceType":"module"}