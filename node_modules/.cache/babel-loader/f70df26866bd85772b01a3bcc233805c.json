{"ast":null,"code":"var _jsxFileName = \"/home/timiking/Apps/rather/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { _saveQuestionAnswer } from '../_DATA';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question() {\n  _s();\n\n  const {\n    questionID\n  } = useParams();\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.questions.questions);\n  const user = useSelector(state => state.users.user);\n  const users = useSelector(state => state.users.users);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [answeredOrNot, setAnsweredOrNot] = useState(\"\");\n  const [answeredTotal, setAnsweredTotal] = useState([]);\n  const [option, setOption] = useState(\"\");\n\n  const stripSpaces = string => {\n    const arr = string.split(\" \");\n    const newString = arr.join(\"\");\n    return newString.trim().toLowerCase();\n  };\n\n  useEffect(() => {\n    if (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.id) {\n      const qst = questions[questionID];\n      setCurrentQuestion(qst);\n      setAnsweredTotal([qst.optionOne.votes.concat(qst.optionTwo.votes).length,\n      /** Total answeres */\n      qst.optionOne.votes.length,\n      /**option one answers */\n      qst.optionTwo.votes.length\n      /** option two answers */\n      ]);\n    }\n\n    if (user.name) {\n      const arr = Object.keys(user.answers);\n\n      if (arr.includes(currentQuestion.id)) {\n        setAnsweredOrNot(\"answered\");\n      } else {\n        setAnsweredOrNot(\"unanswered\");\n      }\n    }\n  }, [questions, currentQuestion, user, option]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (option !== \"\") {\n      _saveQuestionAnswer({\n        authedUser: user.id,\n        qid: currentQuestion.id,\n        answer: option\n      }).then(() => {\n        const qst = questions[questionID];\n        setCurrentQuestion(qst);\n        setAnsweredTotal([qst.optionOne.votes.concat(qst.optionTwo.votes).length,\n        /** Total answeres */\n        qst.optionOne.votes.length,\n        /**option one answers */\n        qst.optionTwo.votes.length\n        /** option two answers */\n        ]);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full lg:w-1/2 md:w-full min-h-0 border-2 rounded-xl overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"primary-color text-on-primary h-14 flex items-center px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [answeredOrNot === \"unanswered\" && `${users[currentQuestion.author].name} asks:`, answeredOrNot === \"answered\" && `Asked by ${users[currentQuestion.author].name}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-4 bg-white items-center\",\n      children: [users[currentQuestion.author] && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: users[currentQuestion.author].avatarURL,\n        alt: \"avatar\",\n        className: \"rounded-full w-44 h-44 bg-gray-900 mr-2 border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 51\n      }, this), // Show question with iptions .......\n      answeredOrNot === \"unanswered\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 w-full h-full flex flex-col justify-between border-l-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-black text-2xl\",\n          children: \"Would you rather...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, currentQuestion.id),\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"vote\",\n              id: \"choice1\",\n              value: \"optionOne\",\n              onChange: () => setOption(\"optionOne\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"choice1\",\n              className: \"pl-1\",\n              children: [currentQuestion.optionOne.text,\n              /** First answer */\n              \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"vote\",\n              id: \"choice2\",\n              onChange: () => setOption(\"optionTwo\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"choice2\",\n              className: \"pl-1\",\n              children: [currentQuestion.optionTwo.text,\n              /** First answer */\n              \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Button\",\n            className: \"w-full secondary-color text-white h-10 mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this), // When question is answered, show user selection and percentage\n      answeredOrNot === \"answered\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 w-full h-full flex flex-col justify-between border-l-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-black text-2xl\",\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: `rounded-lg border-2 flex flex-col relative p-5\n                                    ${user.answers[questionID] === \"optionOne\" ? \"border-green-400 bg-green-100\" : \"bg-gray-100 border-gray-200\"}\n                                    `,\n          children: [\n          /** Your vote */\n          user.answers[questionID] === \"optionOne\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `absolute self-end -right-5 -top-6 text-gray-600 leading-tight rounded-full \n                                            flex justify-center items-center w-12 h-12 text-sm font-black bg-yellow-300`,\n            children: [\"Your \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 46\n            }, this), \" vote\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 82\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl mb-4 text-green-700\",\n            children: [currentQuestion.optionOne.text,\n            /** First answer */\n            \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-10 bg-gray-300 rounded-sm overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-2/3 h-full rounded-md flex justify-end items-center pr-2\n                                            ${user.answers[questionID] === \"optionOne\" ? \"bg-green-400 text-white\" : \"bg-gray-400\"}`,\n              style: {\n                width: `${answeredTotal[1] / answeredTotal[0] * 100}%`\n              },\n              children: `${answeredTotal[1] / answeredTotal[0] * 100}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: [answeredTotal[1], \" out of \", answeredTotal[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: `border-r rounded-lg bg-gray-100 border-2 flex flex-col relative p-5\n                                    ${user.answers[questionID] === \"optionTwo\" ? \"border-green-400 bg-green-100\" : \"bg-gray-100 border-gray-200\"}\n                                    `,\n          children: [\n          /** Your vote */\n          user.answers[questionID] === \"optionTwo\" && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `absolute self-end -right-5 -top-6 text-gray-600 leading-tight rounded-full \n                                            flex justify-center items-center w-12 h-12 text-sm font-black bg-yellow-300`,\n            children: [\"Your \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 46\n            }, this), \" vote\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 82\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xl mb-4\",\n            children: [currentQuestion.optionTwo.text,\n            /** First answer */\n            \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-10 bg-gray-300 rounded-sm overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `h-full rounded-md flex justify-end items-center pr-2\n                                            ${user.answers[questionID] === \"optionTwo\" ? \"bg-green-400 text-white\" : \"bg-gray-400\"}`,\n              style: {\n                width: `${answeredTotal[2] / answeredTotal[0] * 100}%`\n              },\n              children: `${answeredTotal[2] / answeredTotal[0] * 100}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: [answeredTotal[1], \" out of \", answeredTotal[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Question, \"wyh2NhkL53VEkq5f+qL0mqjTxzw=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/home/timiking/Apps/rather/src/components/Question.js"],"names":["React","useEffect","useState","useParams","useDispatch","useSelector","_saveQuestionAnswer","Question","questionID","dispatch","questions","state","user","users","currentQuestion","setCurrentQuestion","answeredOrNot","setAnsweredOrNot","answeredTotal","setAnsweredTotal","option","setOption","stripSpaces","string","arr","split","newString","join","trim","toLowerCase","id","qst","optionOne","votes","concat","optionTwo","length","name","Object","keys","answers","includes","handleSubmit","e","preventDefault","authedUser","qid","answer","then","author","avatarURL","text","width"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux'\n\nimport {_saveQuestionAnswer} from '../_DATA';\n\n\nfunction Question() {\n\n    const { questionID } = useParams();\n\n    const dispatch = useDispatch();\n\n    const questions = useSelector(state => state.questions.questions);\n    const user = useSelector(state => state.users.user);\n    const users = useSelector(state => state.users.users);\n\n    const [currentQuestion, setCurrentQuestion] = useState({});\n    const [answeredOrNot, setAnsweredOrNot ] = useState(\"\");\n\n    const [answeredTotal, setAnsweredTotal] = useState([]);\n\n    const [option, setOption] = useState(\"\")\n\n    const stripSpaces = (string) => {\n        const arr = string.split(\" \");\n        const newString = arr.join(\"\")\n        return newString.trim().toLowerCase();\n    }\n\n    useEffect(()=>{\n\n        if(currentQuestion?.id){\n            const qst = questions[questionID];\n            setCurrentQuestion(qst)\n            setAnsweredTotal([\n                qst.optionOne.votes.concat(qst.optionTwo.votes).length, /** Total answeres */\n                qst.optionOne.votes.length, /**option one answers */\n                qst.optionTwo.votes.length, /** option two answers */\n            ])\n        }\n\n        if(user.name){\n\n            const arr = Object.keys(user.answers);\n\n            if(arr.includes(currentQuestion.id)){\n                setAnsweredOrNot(\"answered\")\n            }else{\n                setAnsweredOrNot(\"unanswered\")\n            }\n        }\n\n    },[questions, currentQuestion,user, option])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(option !== \"\"){\n            _saveQuestionAnswer({\n                authedUser: user.id,\n                qid: currentQuestion.id,\n                answer: option\n            }).then(()=>{\n                const qst = questions[questionID];\n                setCurrentQuestion(qst)\n                setAnsweredTotal([\n                    qst.optionOne.votes.concat(qst.optionTwo.votes).length, /** Total answeres */\n                    qst.optionOne.votes.length, /**option one answers */\n                    qst.optionTwo.votes.length, /** option two answers */\n                ])\n            })\n        }\n    }\n\n\n    return (\n        <div className=\"w-full lg:w-1/2 md:w-full min-h-0 border-2 rounded-xl overflow-hidden\">\n\n            <div className=\"primary-color text-on-primary h-14 flex items-center px-4\">\n                <h1> \n                    {answeredOrNot === \"unanswered\" && `${users[currentQuestion.author].name} asks:`} \n                    {answeredOrNot === \"answered\" && `Asked by ${users[currentQuestion.author].name}`}\n                </h1> \n            </div>\n\n            <div className=\"flex p-4 bg-white items-center\">\n\n                {users[currentQuestion.author] && <img src={users[currentQuestion.author].avatarURL} alt=\"avatar\" className=\"rounded-full w-44 h-44 bg-gray-900 mr-2 border\" />}\n\n                {// Show question with iptions .......\n\n                    answeredOrNot === \"unanswered\" && (\n                        <div className=\"px-4 w-full h-full flex flex-col justify-between border-l-2\"> \n\n                            <h2 className=\"font-black text-2xl\">\n                                Would you rather...\n                            </h2><br/>\n\n                            <form onSubmit={(e)=>handleSubmit(e,currentQuestion.id)}>\n                                <fieldset>\n                                    <input type=\"radio\" name=\"vote\" id=\"choice1\" value=\"optionOne\"\n                                        onChange={()=> setOption(\"optionOne\")}\n                                    />\n                                    <label htmlFor=\"choice1\" className=\"pl-1\">\n\n                                        {currentQuestion.optionOne.text}{/** First answer */ \"?\"}\n\n                                    </label>\n                                </fieldset><br/>\n\n                                <fieldset>\n                                    <input type=\"radio\" name=\"vote\" id=\"choice2\" \n                                        onChange={()=> setOption(\"optionTwo\")}\n                                    />\n                                    <label htmlFor=\"choice2\" className=\"pl-1\">\n\n                                        {currentQuestion.optionTwo.text}{/** First answer */ \"?\"}\n\n                                    </label>\n                                </fieldset><br/>\n\n                                <input \n                                    type=\"submit\"\n                                    value=\"Button\"\n                                    className=\"w-full secondary-color text-white h-10 mt-2\" \n                                    \n                                /> \n\n                            </form>            \n\n                        </div>\n                    )\n                }\n\n                { // When question is answered, show user selection and percentage\n                    answeredOrNot === \"answered\" && (\n                        <div className=\"px-4 w-full h-full flex flex-col justify-between border-l-2\"> \n\n                            <h2 className=\"font-black text-2xl\">\n                                Results:\n                            </h2><br/>\n\n                            <fieldset \n                                className={\n                                    `rounded-lg border-2 flex flex-col relative p-5\n                                    ${user.answers[questionID] === \"optionOne\" ? \"border-green-400 bg-green-100\" : \"bg-gray-100 border-gray-200\"}\n                                    `\n                                }\n                            >\n\n                                { /** Your vote */\n                                    user.answers[questionID] === \"optionOne\" && (<p \n                                        className={\n                                            `absolute self-end -right-5 -top-6 text-gray-600 leading-tight rounded-full \n                                            flex justify-center items-center w-12 h-12 text-sm font-black bg-yellow-300`\n                                        }\n                                    >\n                                \n                                        Your <br /> vote\n                                    </p>)\n                                }\n\n                                <p className=\"text-xl mb-4 text-green-700\">\n\n                                    {currentQuestion.optionOne.text}{/** First answer */ \"?\"}\n\n                                </p>\n\n                                {/** show percentage */}\n                                <div className=\"w-full h-10 bg-gray-300 rounded-sm overflow-hidden\">\n                                    <div \n                                        className={\n                                            `w-2/3 h-full rounded-md flex justify-end items-center pr-2\n                                            ${user.answers[questionID] === \"optionOne\" ? \"bg-green-400 text-white\" : \"bg-gray-400\"}`\n                                        }\n                                        style={{width: `${answeredTotal[1]/answeredTotal[0] * 100}%`}}\n                                    >\n\n                                        {`${answeredTotal[1]/answeredTotal[0] * 100}%`}\n\n                                    </div>\n                                </div>\n                                <p className=\"text-center\">\n                                    {answeredTotal[1]} out of {answeredTotal[0]}\n                                </p>\n                            </fieldset><br/>\n\n                            <fieldset\n                                className={\n                                    `border-r rounded-lg bg-gray-100 border-2 flex flex-col relative p-5\n                                    ${user.answers[questionID] === \"optionTwo\" ? \"border-green-400 bg-green-100\" : \"bg-gray-100 border-gray-200\"}\n                                    `\n                                }\n                            >\n\n                                {/** Your vote */\n                                    user.answers[questionID] === \"optionTwo\" && (<p \n                                        className={\n                                            `absolute self-end -right-5 -top-6 text-gray-600 leading-tight rounded-full \n                                            flex justify-center items-center w-12 h-12 text-sm font-black bg-yellow-300`\n                                        }\n                                    >\n                                \n                                        Your <br /> vote\n                                    </p>)\n                                }\n\n                                <p className=\"text-xl mb-4\">\n\n                                    {currentQuestion.optionTwo.text}{/** First answer */ \"?\"}\n\n                                </p>\n\n                                <div className=\"w-full h-10 bg-gray-300 rounded-sm overflow-hidden\">\n\n                                    <div \n                                        className={\n                                            `h-full rounded-md flex justify-end items-center pr-2\n                                            ${user.answers[questionID] === \"optionTwo\" ? \"bg-green-400 text-white\" : \"bg-gray-400\"}`\n                                        }\n                                        style={{width: `${answeredTotal[2]/answeredTotal[0] * 100}%`}}\n                                    >\n\n                                        {`${answeredTotal[2]/answeredTotal[0] * 100}%`}\n\n                                    </div>\n                                </div>\n\n                                <p className=\"text-center\">\n                                    {answeredTotal[1]} out of {answeredTotal[0]}\n                                </p>\n                            </fieldset><br/>              \n\n                        </div>\n                    )\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default Question\n"]},"metadata":{},"sourceType":"module"}